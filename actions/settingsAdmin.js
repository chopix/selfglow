import { Composer, InlineKeyboard } from 'grammy'
import { User } from './../models/User.js'
import { Pagination } from './../libs/pagination.js'
import 'dotenv/config'

const composer = new Composer()

composer.callbackQuery('settingsAdmin', async ctx => {
	try {
		console.log('sadas')
		if (Number(ctx.from.id) === Number(process.env.ADMIN_TG_ID)) {
			const inline = new InlineKeyboard()
				.text('üî® –í—ã–¥–∞—Ç—å –∞–¥–º–∏–Ω–∫—É', 'addAdmin')
				.row()
				.text('‚öí –ó–∞–±—Ä–∞—Ç—å –∞–¥–º–∏–Ω–∫—É', 'deleteAdmin')
				.row()
				.text('‚úçÔ∏è –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤', 'adminList')
				.row()
				.text('üîô –ù–∞–∑–∞–¥', 'banBack')
				.row()
			const admins = await User.findAll({ where: { isAdmin: true } })
			await ctx.reply(
				`<b>–ú–µ–Ω—é –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</b>

–ê–¥–º–∏–Ω–æ–≤: ${admins.length}`,
				{ reply_markup: inline }
			)
		} else {
			await ctx.answerCallbackQuery('–í—ã –Ω–µ —Å–æ–∑–¥–∞—Ç–µ–ª—å –±–æ—Ç–∞.')
		}
	} catch (e) {
		console.log(e)
	}
})

composer.callbackQuery('addAdmin', async ctx => {
	try {
		await ctx.conversation.enter('addAdminConversation')
	} catch (e) {
		console.log(e)
	}
})

composer.callbackQuery('adminList', async ctx => {
	const admins = await User.findAll({ where: { isAdmin: true } })
	const data = []
	admins.forEach(user => {
		data.push(`–ù–∏–∫: ${user.username}, –¢–µ–ª–µ–≥—Ä–∞–º ID: ${user.tgId}`)
	})
	let pagination = new Pagination({ data })
	let text = await pagination.text()
	let keyboard = await pagination.keyboard()
	if (admins.length < 1) {
		await ctx.reply('–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç.')
	} else {
		await ctx.reply(text, keyboard)
	}

	pagination.handleActions(composer)
})

composer.callbackQuery('deleteAdmin', async ctx => {
	try {
		await ctx.conversation.enter('deleteAdminConversation')
	} catch (e) {
		console.log(e)
	}
})

composer.callbackQuery('banBack', async ctx => {
	try {
		await ctx.conversation.exit()
		const inline = new InlineKeyboard()
			.text('üë• –ü–æ–¥–ø–∏—Å—á–∏–∫–∏', 'settingsSubs')
			.text('üì∞ –õ–µ–Ω–¥–∏–Ω–≥', 'settingsLanding')
			.row()
			.text('üîó –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å', 'settingsAdminPanel')
			.text('‚úâÔ∏è –û—Ç–≤–µ—Ç—ã –æ—Ç –±–æ—Ç–∞', 'settingsAnswers')
			.row()
			.text('üóÇ –ö–Ω–æ–ø–∫–∏', 'settingsButtons')
			.text('üéÅ –ü—Ä–æ–º–æ–∫–æ–¥—ã', 'settingsPromo')
			.row()
			.text('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', 'settingsStats')
			.text('üë• –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞', 'settingsRefs')
			.row()
			.text('üî® –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', 'settingsBan')
			.row()
			.text('‚úèÔ∏è –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã', 'settingsAdmin')
			.row()
			.text('üí¨ –°–±–æ—Ä –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤', 'settingsContacts')
			.row()
			.text('‚è∏ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–ø–ª–∞—Ç—ã', 'settingsPayments')
			.row()
		await ctx.reply(
			`<b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–∞—à–µ–≥–æ –±–æ—Ç–∞</b>

–ü–æ–¥–ø–∏—Å—á–∏–∫–∏ - –≤—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥–ø–∏—Å—á–∏–∫–∞—Ö –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö –±–æ—Ç–∞.
–†–µ—Ñ–µ—Ä–∞–ª—ã - –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–ª—è –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
–û—Ç–≤–µ—Ç—ã –±–æ—Ç–∞ - –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤ –æ—Ç –±–æ—Ç–∞
–ú–µ–Ω—é –≤ –±–æ—Ç–µ - —Å–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π

–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –æ–±—Ä–∞—Ç–Ω–æ –≤ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é, –í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É /start`,
			{ reply_markup: inline }
		)
	} catch (e) {
		console.log(e)
	}
})

export default composer
