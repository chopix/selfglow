import { Tarif } from '../models/Tarif.js'
import { InlineKeyboard } from 'grammy'
import { Resource } from '../models/Resource.js'

function minutesToMonthsAndDays(totalMinutes) {
	const minutesInDay = 24 * 60
	const minutesInMonth = 30 * minutesInDay

	const totalDays = Math.floor(totalMinutes / minutesInDay)
	const months = Math.floor(totalDays / 30)
	const days = totalDays % 30
	if (!days) {
		return `${months} –º–µ—Å—è—Ü–µ–≤`
	}

	return `${months} –º–µ—Å—è—Ü–µ–≤ ${days} –¥–Ω–µ–π`
}

export async function sendCurrentEditingTarif(ctx) {
	const tarifId = ctx.session.editingTarifId
	const tarif = await Tarif.findByPk(tarifId)
	const currency = tarif.currency.split(' ')[1]
	const botInfo = await ctx.api.getMe()
	const inline = new InlineKeyboard()
		.text(`üìù –ù–∞–∑–≤–∞–Ω–∏–µ`, `tarifName`)
		.text(`üìù –¶–µ–Ω–∞`, `tarifPrice`)
		.row()
		.text(`üìù –í–∞–ª—é—Ç–∞`, `tarifCurrency`)
		.text(`üìù –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å`, `tarifTime`)
		.row()
		.text(`üìù –û–ø–∏—Å–∞–Ω–∏–µ`, `tarifDescription`)
		.text(`üìù –ù–∞–∑–≤–∞–Ω–∏–µ –≤ —á–µ–∫–µ`, `tarifReceiptName`)
		.row()
		.text(`üìù –¢–µ–∫—Å—Ç –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ`, `tarifSuccess`)
		.row()
		.text(`üóë –£–¥–∞–ª–∏—Ç—å`, `tarifDelete`)
		.text(`üîô –ù–∞–∑–∞–¥`, `tarifBack`)
		.row()
	const resource = await Resource.findByPk(tarif.resourceId)
	await ctx.reply(
		`<b>–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–∞:</b> ${tarif.name}
<b>–ù–∞–∑–≤–∞–Ω–∏–µ –≤ —á–µ–∫–µ:</b> ${tarif.receiptName}
<b>–¶–µ–Ω–∞:</b> ${tarif.price} ${currency}
<b>–ù–∞—á–∞–ª–æ –ø–æ–¥–ø–∏—Å–∫–∏:</b> –≤—Ä–µ–º—è –ø–æ–∫—É–ø–∫–∏
<b>–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:</b> ${minutesToMonthsAndDays(tarif.time)}

<b>–†–µ—Å—É—Ä—Å—ã:</b> ${resource.resourceName}
<b>–ü—Ä—è–º–∞—è —Å—Å—ã–ª–∫–∞:</b> https://t.me/${botInfo.username}?start=tarif${tarif.id}
<b>–¢–µ–∫—Å—Ç –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–µ:</b> ${tarif.successText}
<b>–û–ø–∏—Å–∞–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–∞:</b> ${
			tarif.description === null ? '–ù–µ—Ç—É' : tarif.description
		}`,
		{
			reply_markup: inline,
		}
	)
}
