import { InlineKeyboard } from 'grammy'
import mainMenuFunction from './../functions/mainMenuFunction.js'
import { Tarif } from '../models/Tarif.js'

export const addTarifConversation = async (conversation, ctx) => {
	try {
		const inline = new InlineKeyboard().text('‚ùå –û—Ç–º–µ–Ω–∞', 'cancel')
		await ctx.reply(
			'<b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞</b>\n\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–∞',
			{
				reply_markup: inline,
			}
		)
		const name = await conversation.waitFor(['message:text', 'callback_query'])
		if (
			name.update.callback_query &&
			name.update.callback_query.data &&
			name.update.callback_query.data === 'cancel'
		) {
			return mainMenuFunction(ctx)
		}
		const currencyInline = new InlineKeyboard()
			.text('üá∑üá∫ RUB', 'üá∑üá∫ RUB')
			.text('üíµ USD', 'üíµ USD')
			.text('üí∂ EUR', 'üí∂ EUR')
			.text('üá∑üá∫ üí∑', 'üá∑üá∫ üí∑')
			.row()
			.text('‚ùå –û—Ç–º–µ–Ω–∞', 'cancel')
		await ctx.reply(
			`–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–∞ - ${name.message.text}\n\n–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É –¥–ª—è —Ç–∞—Ä–∏—Ñ–∞, –∏–ª–∏ —Å–¥–µ–ª–∞–π—Ç–µ —Ç–∞—Ä–∏—Ñ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–º`,
			{ reply_markup: currencyInline }
		)
		const currency = await conversation.waitForCallbackQuery(
			['üá∑üá∫ RUB', 'üíµ USD', 'üí∂ EUR', 'üá∑üá∫ üí∑', 'cancel'],
			{
				otherwise: async ctx => {
					await ctx.reply('–ò—Å–ø–æ–ª—å–∑—É–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É!', {
						reply_markup: currencyInline,
					})
				},
			}
		)
		if (currency.match === 'cancel') {
			return mainMenuFunction(ctx)
		}
		await ctx.reply(
			`–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–∞ - ${name.message.text}\n–í–∞–ª—é—Ç–∞: ${currency.match}\n\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É —Ü–µ–Ω—É –¥–ª—è —Ç–∞—Ä–∏—Ñ–∞(–æ—Ç 1 –µ–¥.):`,
			{ reply_markup: inline }
		)
		const price = await conversation.form.number()
		const daysInline = new InlineKeyboard()
			.text('7 –¥–Ω–µ–π', '7')
			.text('14 –¥–Ω–µ–π', '14')
			.text('30 –¥–Ω–µ–π', '30')
			.row()
			.text('‚ùå –û—Ç–º–µ–Ω–∞', 'cancel')
		await ctx.reply(
			`–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–∞ - ${name.message.text}\n\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è —Ç–∞—Ä–∏—Ñ–∞ –≤ –¥–Ω—è—Ö –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –≥–æ—Ç–æ–≤—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –Ω–∏–∂–µ üëá`,
			{ reply_markup: daysInline }
		)
		const days = await conversation.waitForCallbackQuery(
			['7', '14', '30', '60', 'cancel'],
			{
				otherwise: async ctx =>
					await ctx.reply('–ò—Å–ø–æ–ª—å–∑—É–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É!', {
						reply_markup: daysInline,
					}),
			}
		)
		if (days.match === 'cancel') {
			return mainMenuFunction(ctx)
		}
		const nextInline = new InlineKeyboard()
			.text('‚û°Ô∏è –ü–µ—Ä–µ–π—Ç–∏ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ —Ä–µ—Å—É—Ä—Å–æ–≤', 'next')
			.row()
			.text('‚ùå –û—Ç–º–µ–Ω–∞', 'cancel')
		await ctx.reply(
			`–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–∞ - ${name.message.text}\n–í–∞–ª—é—Ç–∞: ${currency.match}\n–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è: ${days.match} –¥–Ω–µ–π\n\n–ß—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—é –∫–∞–Ω–∞–ª–æ–≤/–≥—Ä—É–ø–ø –∫ —Ç–∞—Ä–∏—Ñ—É, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üëá`,
			{
				reply_markup: nextInline,
			}
		)
		const next = await conversation.waitForCallbackQuery(['next', 'cancel'], {
			otherwise: async ctx =>
				await ctx.reply('–ò—Å–ø–æ–ª—å–∑—É–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É!', {
					reply_markup: nextInline,
				}),
		})
		if (next.match === 'cancel') {
			return mainMenuFunction(ctx)
		}
		const resourceInline = new InlineKeyboard()
			.text('üìà 1 —Ä–µ—Å—É—Ä—Å', '1resource')
			.row()
			.text('üìà 2 —Ä–µ—Å—É—Ä—Å', '2resource')
			.row()
			.text('üìà 3 —Ä–µ—Å—É—Ä—Å', '3resource')
			.row()
			.text('üìà 4 —Ä–µ—Å—É—Ä—Å', '4resource')
			.row()
			.text('‚ùå –û—Ç–º–µ–Ω–∞', 'cancel')
		await ctx.reply(
			`–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–∞ - ${name.message.text}\n–í–∞–ª—é—Ç–∞: ${currency.match}\n–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è: ${days.match} –¥–Ω–µ–π\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ—Å—É—Ä—Å—ã –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –≤—ã–¥–∞—Ç—å –¥–æ—Å—Ç—É–ø –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–∏ üëá`,
			{
				reply_markup: resourceInline,
			}
		)
		const resource = await conversation.waitForCallbackQuery(
			['1resource', '2resource', '3resource', '4resource', 'cancel'],
			{
				otherwise: async ctx =>
					await ctx.reply('–ò—Å–ø–æ–ª—å–∑—É–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É!', {
						reply_markup: resource,
					}),
			}
		)
		if (resource.match === 'cancel') {
			return mainMenuFunction(ctx)
		}
		const tarif = await Tarif.create({
			name: name.message.text,
			currency: currency.match,
			price: price,
			time: days.match,
		})
		await ctx.reply('–¢–∞—Ä–∏—Ñ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω')
		return mainMenuFunction(ctx)
	} catch (e) {
		console.log(e)
	}
}
