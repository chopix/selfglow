import { InlineKeyboard } from 'grammy'
import { Tarif } from '../../models/Tarif.js'
import { sendCurrentEditingTarif } from '../../functions/sendCurrentEditingTarif.js'

export const tarifCurrencyConversation = async (conversation, ctx) => {
	const currencyInline = new InlineKeyboard()
		.text('üá∑üá∫ RUB', 'üá∑üá∫ RUB')
		.text('üíµ USD', 'üíµ USD')
		.text('üí∂ EUR', 'üí∂ EUR')
		.text('üí∑ GBP', 'üí∑ GBP')
		.row()
		.text('–û—Ç–º–µ–Ω–∞', 'tarifEditingBack')
	await ctx.reply(`–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤—É—é –≤–∞–ª—é—Ç—É –¥–ª—è —Ç–∞—Ä–∏—Ñ–∞`, {
		reply_markup: currencyInline,
	})
	const currency = await conversation.waitForCallbackQuery(
		['üá∑üá∫ RUB', 'üíµ USD', 'üí∂ EUR', 'üí∑ GBP', 'tarifEditingBack'],
		{
			otherwise: async ctx => {
				await ctx.reply('–ò—Å–ø–æ–ª—å–∑—É–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É!', {
					reply_markup: currencyInline,
				})
			},
		}
	)
	if (currency.match === 'cancel') {
		return sendCurrentEditingTarif(ctx)
	} else {
		await Tarif.update(
			{ currency: currency.match },
			{ where: { id: ctx.session.editingTarifId } }
		)
		return sendCurrentEditingTarif(ctx)
	}
}
